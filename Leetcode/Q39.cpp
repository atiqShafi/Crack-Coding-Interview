 //Combination Sum
 //题目意思：给定一组没有重复的数，以及一个目标的和sum,求有多少中不同的组合，其和为sum
 //每个候选的数可以无限次使用


 //有点类似于代价为1的完全背包,但是求解目标不一样，一个是求最大的可携带的，而该题是求满足和为sum的组合数。

 //01 背包（ZeroOnePack）: 有 N 件物品和一个容量为 V 的背包。（每种物品均只有一件）第 i 件物品的费用是 c[i]，价值是 w[i]。求解将哪些物品装入背包可使价值总和最大。
//完全背包 (CompletePack): 有 N 种物品和一个容量为 V 的背包，每种物品都有无限件可用。第 i 种物品的费用是 c[i]，价值是 w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。
//多重背包 (MultiplePack): 有 N 种物品和一个容量为 V 的背包。第 i 种物品最多有 n[i] 件可用，每件费用是 c[i]，价值是 w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。

//back-tracking方法
